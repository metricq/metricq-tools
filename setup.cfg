[metadata]
name = metricq-tools
author = TU Dresden
description = Useful scripts to manage and inspect a MetricQ instance
long_description = file: README.rst
long_description_content_type = text/rst
url = https://github.com/metricq/metricq-tools
license = GPL3
classifiers =
    License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
    Programming Language :: Python :: 3

[options]
packages =
    metricq_tools
python_requires = >=3.8
setup_requires =
    setuptools_scm
install_requires =
    metricq ~= 3.0
    click
    click-log
    click-completion
    async-timeout~=3.0
    humanize~=2.5
    python-dateutil~=2.8
    numpy
    termplotlib
    tabulate

[options.entry_points]
console_scripts =
    metricq-check = metricq_tools.check:main
    metricq-discover = metricq_tools.discover:main
    metricq-inspect = metricq_tools.inspect:main
    metricq-send = metricq_tools.send:main
    metricq-spy = metricq_tools.spy:main
    metricq-summary = metricq_tools.summary:main

[options.extras_require]
lint =
    black == 20.8b1
    flake8
    isort ~= 5.0
    check-manifest
    pre-commit
test =
    pytest
dev =
    %(test)s
    %(lint)s
    tox

[flake8]
application-import-names =
    metricq,
    tests,
    examples
extend-exclude =
    *_pb2.py,
    *_pb2.pyi,
    build,
    .venv,
    venv
show-source = True
statistics = True
select =
    # Regular flake8 rules
    C, E, F, W
    # pep8-naming rules
    N
ignore =
    # E203: whitespace before ':' (not PEP8 compliant)
    E203
    # E501: line too long (black does that)
    E501
    # W503: line break before binary operator (not PEP8 compliant)
    W503

[tox:tox]
envlist =
    pytest
    black
    isort
    check-manifest
    flake8


[testenv:pytest]
deps = .[test]
commands =
    pytest \
        --basetemp={envtmpdir} \
        {posargs}

[testenv:black]
deps = .[lint]
commands = black --check .

[testenv:isort]
deps = .[lint]
commands = isort --diff --check .

[testenv:check-manifest]
deps = .[lint]
commands = check-manifest

[testenv:flake8]
deps = .[lint]
commands = flake8 .
